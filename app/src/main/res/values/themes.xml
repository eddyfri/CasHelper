<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.CasHelper" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/cobalt</item>
        <item name="colorPrimaryVariant">@color/white</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/indaco</item>
        <item name="colorSecondaryVariant">@color/lilla</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimary</item>
        <!-- Customize your theme here. -->
        <item name="colorBackgroundFloating">?attr/colorPrimary</item>
        <item name="backgroundColor">?attr/colorPrimaryVariant</item>
        <item name="colorContainer">?attr/colorSecondary</item>
        <!-- Customize app_bar. -->
        <item name="android:actionOverflowButtonStyle">@style/MenuStyle</item>
    </style>




    <style name="toolbar">
        <item name="backgroundTint">?attr/colorPrimary</item>
        <item name="android:textColor">@color/white</item>
    </style>

    <style name="delete_button">
        <item name="backgroundTint">@color/Exits</item>
        <item name="android:textColor">@color/white</item>
    </style>


    <style name="add_button" parent="Widget.MaterialComponents.Button">
        <item name="backgroundTint">@color/confirm</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:state_enabled">true</item>

    </style>

    <style name="disable_button" parent="Widget.MaterialComponents.Button">
        <item name="backgroundTint">@color/Disable</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:state_enabled">false</item>
    </style>

    <style name="MenuStyle_update" parent="Widget.AppCompat.ActionButton.Overflow">
        <item name="android:icon">@drawable/basket_light</item>
    </style>


    <style name="MenuStyle_mode" parent="Widget.AppCompat.ActionButton.Overflow">
        <item name="android:icon">@drawable/night</item>
    </style>


    <style name="MenuStyle_empty" parent="Widget.AppCompat.ActionButton.Overflow">
        <item name="android:icon">@drawable/backroll_light</item>
    </style>


    <style name="MenuStyle" parent="Widget.AppCompat.ActionButton.Overflow">
        <item name="android:src">@drawable/menu_home</item>
    </style>


    <style name="TextStyle">

        <item name="android:textColor">?attr/colorOnSecondary</item>
        <item name="android:textSize">16dp</item>
        <item name="android:textStyle">bold</item>

    </style>

    <style name="TitleStyle">
        <item name="android:textColor">?attr/colorOnSecondary</item>
        <item name="android:textSize">24dp</item>
        <item name="android:textStyle">bold</item>
    </style>

    <style name="DateStyle">
        <item name="android:textColor">?attr/colorOnSecondary</item>
        <item name="android:textSize">14dp</item>
        <item name="android:textStyle">bold</item>
    </style>

    <style name="Theme.CasHelper.AppWidgetContainerParent" parent="@android:style/Theme.DeviceDefault">
        <!-- Radius of the outer bound of widgets to make the rounded corners -->
        <item name="appWidgetRadius">16dp</item>
        <!--
        Radius of the inner view's bound of widgets to make the rounded corners.
        It needs to be 8dp or less than the value of appWidgetRadius
        -->
        <item name="appWidgetInnerRadius">8dp</item>
    </style>

    <style name="Theme.CasHelper.AppWidgetContainer" parent="Theme.CasHelper.AppWidgetContainerParent">
        <!-- Apply padding to avoid the content of the widget colliding with the rounded corners -->
        <item name="appWidgetPadding">16dp</item>
    </style>
</resources>